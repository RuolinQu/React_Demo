{"version":3,"sources":["creatNode.js","tree.js","test_tree.js","index.js"],"names":["Node","props","useState","cur","setCur","className","onClick","e","handle","name","id","parentId","children","CreatNode","tree","map","item","key","Tree","this","totree","data","list","parId","obj","result","el","i","len","length","push","Component","TestTree","state","treeData","listClick","console","log","class","ReactDOM","render","document","getElementById"],"mappings":"uNAmBA,SAASA,EAAKC,GAAQ,IAAD,EACKC,oBAAS,GADd,mBACVC,EADU,KACLC,EADK,KAUjB,OACI,qBAAIC,UAAWF,EAAM,MAAQ,GAA7B,UACI,mBAAGG,QAVK,SAACC,GACbN,EAAMO,OAAOD,EAAG,CACZE,KAAMR,EAAMQ,KACZC,GAAIT,EAAMS,GACVC,SAAUV,EAAMU,WAEpBP,GAAQD,IAIJ,SAAwBF,EAAMQ,OAC7BR,EAAMW,YAKJC,MAlCf,SAASA,EAAUZ,GACf,OACI,oBAAII,UAAU,KAAd,SAEQJ,EAAMa,MAAQb,EAAMa,KAAKC,KAAI,SAAAC,GACzB,OACI,wBAAChB,EAAD,2BAAUgB,GAAV,IAAgBR,OAAQP,EAAMO,OAAQS,IAAKD,EAAKN,KAC5C,cAACG,EAAD,CAAWL,OAAQP,EAAMO,OAAQM,KAAME,EAAKJ,UAAeI,EAAKN,WCuB7EQ,E,uKA3BP,OAAQ,cAAC,EAAD,CAAWV,OAAQW,KAAKlB,MAAMO,OAAQM,KAAMK,KAAKC,OAAOD,KAAKlB,MAAMoB,KAAM,O,6BAG9EC,EAAMC,GACT,IAAIC,EAAM,GACNC,EAAS,GAEbH,EAAKP,KAAI,SAAAW,GACLF,EAAIE,EAAGhB,IAAMgB,KAEjB,IAAK,IAAIC,EAAI,EAAGC,EAAMN,EAAKO,OAAQF,EAAIC,EAAKD,IAAK,CAC7C,IAAIjB,EAAKY,EAAKK,GAAGhB,SACbD,GAAMa,EAINC,EAAId,GAAIE,SACRY,EAAId,GAAIE,SAASkB,KAAKR,EAAKK,IAE3BH,EAAId,GAAIE,SAAW,CAACU,EAAKK,IANzBF,EAAOK,KAAKR,EAAKK,IASzB,OAAOF,M,GAzBIM,aC8CJC,E,4MA7CXC,MAAQ,CACJC,SAAU,CACN,CAAExB,GAAI,EAAGD,KAAM,WAAYE,SAAU,GACrC,CAAED,GAAI,EAAGD,KAAM,UAAWE,SAAU,GACpC,CAAED,GAAI,GAAID,KAAM,UAAWE,SAAU,GACrC,CACID,GAAI,EAAGD,KAAM,UAAWE,SAAU,GAEtC,CAAED,GAAI,EAAGD,KAAM,SAAUE,SAAU,GACnC,CAAED,GAAI,GAAID,KAAM,WAAYE,SAAU,GACtC,CAAED,GAAI,GAAID,KAAM,YAAaE,SAAU,GACvC,CAAED,GAAI,EAAGD,KAAM,aAAcE,SAAU,GACvC,CAAED,GAAI,GAAID,KAAM,oBAAqBE,SAAU,GAC/C,CAAED,GAAI,EAAGD,KAAM,WAAYE,SAAU,GACrC,CAAED,GAAI,EAAGD,KAAM,WAAYE,SAAU,GACrC,CAAED,GAAI,EAAGD,KAAM,WAAYE,SAAU,GACrC,CAAED,GAAI,GAAID,KAAM,kBAAmBE,SAAU,GAC7C,CAAED,GAAI,GAAID,KAAM,kBAAmBE,SAAU,IAC7C,CAAED,GAAI,GAAID,KAAM,kBAAmBE,SAAU,M,EAIrDwB,UAAY,SAAC5B,EAAGc,GACZe,QAAQC,IAAIhB,I,uDAIZ,OAEI,sBAAKiB,MAAM,UAAX,UACI,iCACI,mCAAK,qCAAL,QAAwB,qCAAc,qCAAtC,eAAgE,qCAAhE,KAAgF,0CAEpF,+BACI,cAAC,EAAD,CAAMjB,KAAMF,KAAKc,MAAMC,SAAU1B,OAAQW,KAAKgB,cAElD,kE,GArCOJ,aCCvBQ,IAASC,OAAO,cAAC,EAAD,IAAcC,SAASC,eAAe,W","file":"static/js/main.c2261d56.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './tree.css';\r\n\r\nfunction CreatNode(props) {\r\n    return (\r\n        <ul className=\"ul\">\r\n            {\r\n                props.tree && props.tree.map(item => {\r\n                    return (\r\n                        <Node {...item} handle={props.handle} key={item.id}>\r\n                            <CreatNode handle={props.handle} tree={item.children} key={item.id} />\r\n                        </Node>\r\n                    )\r\n                })\r\n            }\r\n        </ul>\r\n    );\r\n}\r\n\r\nfunction Node(props) {\r\n    const [cur, setCur] = useState(false);\r\n    let listclick = (e) => {\r\n        props.handle(e, {\r\n            name: props.name,\r\n            id: props.id,\r\n            parentId: props.parentId\r\n        })\r\n        setCur(!cur)\r\n    }\r\n    return (\r\n        <li className={cur ? \"cur\" : \"\"}>\r\n            <p onClick={listclick}>{props.name}</p>\r\n            {props.children}\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default CreatNode","import React, { Component } from 'react';\r\nimport CreatNode from './creatNode';\r\n\r\nclass Tree extends Component {\r\n\r\n    render() {\r\n        return (<CreatNode handle={this.props.handle} tree={this.totree(this.props.data, 0)} />);\r\n    }\r\n\r\n    totree(list, parId) {\r\n        let obj = {};\r\n        let result = [];\r\n        //将数组中数据转为键值对结构 (这里的数组和obj会相互引用)\r\n        list.map(el => {\r\n            obj[el.id] = el;\r\n        })\r\n        for (let i = 0, len = list.length; i < len; i++) {\r\n            let id = list[i].parentId;\r\n            if (id == parId) {\r\n                result.push(list[i]);\r\n                continue;\r\n            }\r\n            if (obj[id].children) {\r\n                obj[id].children.push(list[i]);\r\n            } else {\r\n                obj[id].children = [list[i]];\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n}\r\n\r\nexport default Tree","import React, { Component } from 'react';\r\nimport Tree from './tree';\r\n\r\nclass TestTree extends Component {\r\n    state = {\r\n        treeData: [\r\n            { id: 2, name: 'Uber Org', parentId: 0 },\r\n            { id: 3, name: 'Payment', parentId: 1 },\r\n            { id: 10, name: 'Payment', parentId: 7 },\r\n            {\r\n                id: 1, name: 'Product', parentId: 2\r\n            },\r\n            { id: 4, name: 'Design', parentId: 1 },\r\n            { id: 12, name: 'Mobility', parentId: 5 },\r\n            { id: 13, name: 'Marketing', parentId: 5 },\r\n            { id: 5, name: 'Technology', parentId: 2 },\r\n            { id: 14, name: 'Hardware&Veehicle', parentId: 7 },\r\n            { id: 6, name: 'Solution', parentId: 3 },\r\n            { id: 7, name: 'Uber ATG', parentId: 2 },\r\n            { id: 8, name: 'Business', parentId: 4 },\r\n            { id: 11, name: 'Platform&Growth', parentId: 2 },\r\n            { id: 15, name: 'Platform&Growth', parentId: 11 },\r\n            { id: 16, name: 'Platform&Growth', parentId: 11 },\r\n        ]\r\n    }\r\n\r\n    listClick = (e, data) => {\r\n        console.log(data)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div class=\"wrapper\">\r\n                <header>\r\n                    <h1> <span>U</span>ber O<span>r</span><span>g</span> Chart Dashb<span>o</span>ar<span>d</span></h1>\r\n                </header>\r\n                <main>\r\n                    <Tree data={this.state.treeData} handle={this.listClick} />\r\n                </main>\r\n                <footer>\r\n                    Produced by Ruolin Qu\r\n                </footer>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TestTree\r\n","\nimport ReactDOM from 'react-dom';\nimport TestTree from './test_tree';\n\nReactDOM.render(<TestTree />, document.getElementById('root'));"],"sourceRoot":""}